# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Paul Vincent Craven
# This file is distributed under the same license as the Arcade package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Gans Hünther <yang.ambrosius@igs-buchholz.de>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Arcade 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-13 15:19-0500\n"
"PO-Revision-Date: 2020-04-03 18:43+0000\n"
"Last-Translator: Gans Hünther <yang.ambrosius@igs-buchholz.de>, 2021\n"
"Language-Team: German (https://www.transifex.com/arcade-academy/teams/108729/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:4
msgid "What is a Programming Language?"
msgstr "Was ist eine Programmiersprache?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rstNone
msgid ".. image:: chapters/06_what_is_a_programming_language/binary_code.svg"
msgstr ".. image:: chapters/06_what_is_a_programming_language/binary_code.svg"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:10
msgid ""
"We've gotten started writing our first programs using the Python computer "
"language. But what *is* a computer language? What other languages are there?"
" How do they work?"
msgstr ""
"Wir haben angefangen, unsere ersten Programme mit der Computersprache Python"
" zu schreiben. Aber was *ist* eine Computersprache? Welche anderen Sprachen "
"gibt es? Wie funktionieren sie?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:14
msgid ""
"This section will briefly dive into how computers work. We won't spend more "
"than a chapter on this subject because you don't *need* to understand any of"
" this to get *started* programming. But once you become a more advanced "
"programmer, that's no longer true. If you want to get the best performance, "
"if you want to debug complex problems, if you work on building a platform "
"for your servers to run on, you need to understand what happens \"under the "
"hood.\""
msgstr ""
"In diesem Abschnitt werden wir kurz darauf eingehen, wie Computer "
"funktionieren. Wir werden diesem Thema nicht mehr als ein Kapitel widmen, da"
" du nichts davon verstehen *musst*, um mit dem Programmieren zu *beginnen*. "
"Aber sobald du ein fortgeschrittener Programmierer bist, ändert sich das. "
"Wenn du die beste Leistung erzielen willst, wenn du komplexe Probleme "
"debuggen willst, wenn du daran arbeitest, eine Plattform zu bauen, auf der "
"deine Server laufen sollen, musst du verstehen, was \"unter der Haube\" "
"passiert."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:22
msgid ""
"Remember in the last chapter how RGB values were specified from 0-255? The "
"reason for that choice comes from how the computer is built. Understanding "
"how computers work, helps us understand why 255 is a special number."
msgstr ""
"Erinnerst du dich im letzten Kapitel daran, wie RGB-Werte von 0-255 "
"angegeben wurden? Der Grund für diese Wahl kommt daher, wie der Computer "
"aufgebaut ist. Wenn wir verstehen, wie Computer funktionieren, können wir "
"auch verstehen, warum 255 eine besondere Zahl ist."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:27
msgid ""
"Learning to drive a car is a good analogy. You don't need to understand how "
"an engine works to drive a car, but it helps if you want performance, "
"reliability, and to know if you are getting a good deal from the repair "
"shop. In this chapter we'll introduce a few concepts to get started."
msgstr ""
"Das Erlernen des Autofahrens ist eine gute Analogie. Du musst nicht "
"verstehen, wie ein Motor funktioniert, um ein Auto zu fahren, aber es hilft,"
" wenn du dir Leistung und Zuverlässigkeit wünschst und wissen willst, ob du "
"in der Werkstatt ein gutes Angebot bekommst. In diesem Kapitel werden wir "
"ein paar Konzepte vorstellen, um den Einstieg zu erleichtern."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:34
msgid "Central Processing Unit"
msgstr "Zentrale Verarbeitungseinheit"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:36
msgid ""
"Computers have a chip called the Central Processing Unit (CPU_). The CPU "
"functions as the main \"brain\" of the computer. For example, right now you "
"might have a CPU called an Intel i7 or an AMD-FX in your computer. Your "
"phone might have the Qualcomm Snapdragon 855 as its CPU. A dishwasher could "
"have a ARM Cortex M3. Desktop CPUs emphasize speed, phone CPUs emphasize low"
" power consumption, and dishwasher CPUs emphasize low cost."
msgstr ""
"Computer haben einen Chip, der Zentrale Verarbeitungseinheit (CPU) genannt "
"wird. Die CPU fungiert als das eigentliche \"Gehirn\" des Computers. Zum "
"Beispiel könntest du jetzt eine CPU namens Intel i7 oder AMD-FX in deinem "
"Computer haben. Dein Handy könnte den Qualcomm Snapdragon 855 als CPU haben."
" Eine Spülmaschine könnte einen ARM Cortex M3 haben. Bei Desktop-CPUs liegt "
"der Schwerpunkt auf Geschwindigkeit, bei Handy-CPUs auf niedrigem "
"Stromverbrauch und bei Geschirrspüler-CPUs auf niedrigen Kosten."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:46
msgid "The CPU is the \"brain\" of the computer."
msgstr "Die CPU ist \"Gehirn\" des Computers"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:52
msgid ""
".. image:: "
"chapters/06_what_is_a_programming_language/Intel_CPU_Core_i7_2600K_Sandy_Bridge_top.jpg"
msgstr ""
".. image:: "
"chapters/06_what_is_a_programming_language/Intel_CPU_Core_i7_2600K_Sandy_Bridge_top.jpg"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:52
msgid ""
"Intel i7 CPU (`Wikipedia Commons: CPU "
"<https://commons.wikimedia.org/wiki/File:Intel_CPU_Core_i7_2600K_Sandy_Bridge_top.jpg>`_)"
msgstr ""
"Intel i7 CPU (`Wikipedia Commons: CPU "
"<https://commons.wikimedia.org/wiki/File:Intel_CPU_Core_i7_2600K_Sandy_Bridge_top.jpg>`_)"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:54
msgid ""
"The CPU knows what to do by reading in a sequence of instructions. Each "
"instruction the computer reads is a number. For example the number \"4\" "
"might be an instruction to add two other numbers together."
msgstr ""
"Die CPU weiß, was zu tun ist, indem sie eine Folge von Anweisungen einliest."
" Jede Anweisung, die der Computer liest, ist eine Zahl. Zum Beispiel könnte "
"die Zahl \"4\" eine Anweisung sein, zwei andere Zahlen zu addieren."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:58
msgid ""
"*Everything* stored on the computer is saved as a long sequence of numbers. "
"Some numbers are instructions. Some numbers represent data, such as text, "
"photos, and movies."
msgstr ""
"*Alles*, was auf dem Computer gespeichert ist, wird als eine lange Folge von"
" Zahlen gespeichert. Einige Zahlen sind Anweisungen. Einige Zahlen stellen "
"Daten dar, z. B. Texte, Fotos und Filme."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:66
msgid "Graphics Processing Unit"
msgstr "Grafikverarbeitungseinheit"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:68
msgid ""
"In addition to a CPU, computers often have a `Graphics Processing Unit "
"<https://en.wikipedia.org/wiki/Graphics_processing_unit>`_ (GPU). The GPU is"
" a processor whose primary purpose is to run graphics displays. In fact, "
"high-end computer graphic cards can have not just one processor, but 2,500 "
"processors! We call each processor a 'core', and a GPU is often made of many"
" cores. The more processors we have, the more calculations we can run at the"
" same time."
msgstr ""
"Zusätzlich zu einer CPU verfügen Computer oft über eine "
"`Grafikverarbeitungseinheit` "
"<https://en.wikipedia.org/wiki/Graphics_processing_unit>`_ (GPU). Die GPU "
"ist ein Prozessor, dessen Hauptzweck darin besteht, Grafikdisplays zu "
"betreiben. Tatsächlich können High-End-Computer-Grafikkarten nicht nur einen"
" Prozessor, sondern 2.500 Prozessoren haben! Wir nennen jeden Prozessor "
"einen 'Kern', und eine GPU besteht oft aus vielen Kernen. Je mehr "
"Prozessoren wir haben, desto mehr Berechnungen können wir zur gleichen Zeit "
"ausführen."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:76
msgid ""
"GPUs aren't just used for graphics anymore. They are also very useful for "
"any type of task with simple calculations that can be broken into many "
"parts. Physics simulations, artificial intelligence, and data analytics can "
"often make use of a computer's GPU."
msgstr ""
"GPUs werden nicht mehr nur für Grafiken verwendet. Sie sind auch sehr "
"nützlich für jede Art von Aufgabe mit einfachen Berechnungen, die in viele "
"Teile zerlegt werden können. Physiksimulationen, künstliche Intelligenz und "
"Datenanalyse können oft von der GPU eines Computers Gebrauch machen."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:81
msgid "Computer Languages"
msgstr "Computersprachen"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:83
msgid ""
"Computer languages are divided into three broad categories. First "
"generation, second generation, and third generation languages."
msgstr ""
"Computersprachen werden in drei große Kategorien eingeteilt. Sprachen der "
"ersten Generation, der zweiten Generation und der dritten Generation."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:87
msgid "First Generation Languages - Machine Code"
msgstr "Sprachen der ersten Generation - Maschinencode"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:89
msgid ""
"In the early days of computing, programmers entered sequences of numbers "
"that represented commands for the CPU. Programmers also entered sets of "
"numbers as data for the computer to process."
msgstr ""
"In den frühen Tagen der Computertechnik gaben Programmierer Zahlenfolgen "
"ein, die Befehle für die CPU darstellten. Programmierer gaben auch Mengen "
"von Zahlen als Daten ein, die der Computer verarbeiten sollte."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:94
msgid "Machine code is the native language of any computer."
msgstr "Der Maschinencode ist die Muttersprache eines jeden Computers."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:96
msgid ""
"We call these numbers that are CPU instructions `machine code`_. All machine"
" code is made of numbers, but not all numbers are machine code. Some of the "
"numbers might be data to hold text or images. Machine code is also called a "
"`First Generation Language`_ (1GL)."
msgstr ""
"Wir nennen diese Zahlen, die CPU-Anweisungen sind, `Maschinencode`_. Der "
"gesamte Maschinencode besteht aus Zahlen, aber nicht alle Zahlen sind "
"Maschinencode. Einige der Zahlen können Daten sein, die Text oder Bilder "
"enthalten. Der Maschinencode wird auch als `Computersprache der ersten "
"Generation`_ (1GL) bezeichnet."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:101
msgid ""
"Below is an image of the `Altair 8800`_, the first personal computer that "
"regular people could buy. Notice that it is missing a monitor and a "
"keyboard! The first computers loaded instructions by flipping switches. A "
"pattern of switches represented a machine instruction. So you'd flip "
"switches, hit store, flip more switches, hit store, and keep at it until all"
" instructions and data were entered. When you were finally done you would "
"hit the \"Run\" button. And the lights would blink."
msgstr ""
"Unten siehst du ein Bild des `Altair 8800`_, des ersten Personal Computers, "
"den normale Leute kaufen konnten. Beachte, dass ihm ein Monitor und eine "
"Tastatur fehlen! Die ersten Computer luden Anweisungen durch Umlegen von "
"Schaltern. Ein Muster von Schaltern stellte eine Maschinenanweisung dar. Man"
" legte also Schalter um, drückte auf \"Speichern\", legte weitere Schalter "
"um, drückte auf \"Speichern\" und machte so weiter, bis alle Befehle und "
"Daten eingegeben waren. Wenn man schließlich fertig war, drückte man den "
"\"Run\"-Knopf. Und die Lichter würden blinken."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:112
msgid ".. image:: chapters/06_what_is_a_programming_language/Altair_8800.jpg"
msgstr ".. image:: chapters/06_what_is_a_programming_language/Altair_8800.jpg"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:112
msgid ""
"Source: `Wikipedia: Altair 8800 "
"<https://commons.wikimedia.org/wiki/File:Altair_8800,_Smithsonian_Museum.jpg>`_"
msgstr ""
"Quelle: `Wikipedia: Altair 8800 "
"<https://commons.wikimedia.org/wiki/File:Altair_8800,_Smithsonian_Museum.jpg"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:114
msgid ""
"While this may not seem very useful (and quite frankly, it wasn't) it was "
"very popular in the hobbyist community. Those people saw the potential."
msgstr ""
"Dies mag zwar nicht sehr nützlich erscheinen (und war es ehrlich gesagt auch"
" nicht), war aber in der Hobby-Community sehr beliebt. Diese Leute sahen das"
" Potenzial."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:117
msgid ""
"Computers *still* run on machine code. You can still code by punching in "
"numbers if you want. But you'd be crazy because hand-coding these numbers is"
" *so* tedious. There's something better. Assembly Language."
msgstr ""
"Computer laufen immer noch mit dem Maschinencode. Du kannst immer noch "
"programmieren, indem du Zahlen eintippst, wenn du willst. Jedoch wärst du "
"wohl verrückt, weil es so mühsam ist, diese Zahlen von Hand zu codieren. Es "
"gibt etwas Besseres. Die Assemblersprache."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:127
msgid "Second Generation Languages - Assembly"
msgstr "Sprachen der zweiten Generation - Assembler"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:129
msgid ""
"In order to make things easier, a computer scientist named `Kathleen Booth "
"<https://en.wikipedia.org/wiki/Kathleen_Booth>`_ came up with something "
"called `assembly language`_. Assembly language is a `Second Generation "
"Language`_ (2GL). Assembly language looks like this:"
msgstr ""
"Um die Dinge einfacher zu machen, erfand eine Informatikerin namens "
"`Kathleen Booth <https://de.wikipedia.org/wiki/Kathleen_Booth>`_ etwas, das "
"`Assemblersprache`_ genannt wird. Die Assemblersprache ist eine Sprache der "
"zweiten Generation (2GL) und sieht wie folgt aus:"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:142
msgid ""
".. image:: "
"chapters/06_what_is_a_programming_language/Motorola_6800_Assembly_Language.png"
msgstr ""
".. image:: "
"chapters/06_what_is_a_programming_language/Motorola_6800_Assembly_Language.png"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:142
msgid ""
"Source: `Wikipedia: Motorola 6800 Assembly Language "
"<https://en.wikipedia.org/wiki/File:Motorola_6800_Assembly_Language.png>`_"
msgstr ""
"Quelle: `Wikipedia: Motorola 6800 Assembly Language "
"<https://en.wikipedia.org/wiki/File:Motorola_6800_Assembly_Language.png>`_"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:144
msgid "Don't worry! We aren't coding in assembly language for this class."
msgstr ""
"Mach dir keine Sorgen! Wir werden in diesem Kurs nicht in der "
"Assemblersprache programmieren."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:146
msgid ""
"Assembly language allows a programmer to edit a file and type in codes like "
"``LDA`` which stands for \"Load Accumulator Immediate.\" The programmer "
"types these commands into a **source file**. We call the commands `source "
"code`_. The computer can't run the source code as-is. The programmer runs a "
"`compiler`_ that simply translates the computer commands like ``LDA`` into "
"the corresponding number of the machine language instruction."
msgstr ""
"Mit der Assemblersprache kann ein Programmierer eine Datei bearbeiten und "
"Codes wie LDA eintippen, was für \"Load Accumulator Immediate\" steht. Der "
"Programmierer tippt diese Befehle in eine *Quelldatei* ein. Wir nennen die "
"Befehle `Quellcode`_. Der Computer kann den Quellcode nicht so ausführen, "
"wie er ist. Der Programmierer lässt einen `Compiler laufen`_, der die "
"Computerbefehle wie \"LDA\" einfach in die entsprechende Nummer der "
"Maschinensprachanweisung übersetzt."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:157
msgid "A compiler turns human-readable code into machine code."
msgstr "Ein Compiler wandelt den menschenlesbaren Code in Maschinencode um."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:159
msgid ""
"After the programmer compiles the source code into machine code, the "
"programmer can run the compiled code. The compiled code can be given to "
"someone else and they can run it. They do not need the source code or the "
"compiler."
msgstr ""
"Nachdem der Programmierer den Quellcode in Maschinencode kompiliert hat, "
"kann der Programmierer den kompilierten Code ausführen. Der kompilierte Code"
" kann an eine andere Person weitergegeben werden und diese kann ihn "
"ausführen. Sie braucht weder den Quellcode noch den Compiler."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:164
msgid ""
"Assembly language is an improvement over machine language. But it isn't "
"*that* much of an improvement. Why? Assembly language instructions are very "
"low-level. There are no commands like \"draw a building here.\" Or even "
"\"print hi.\" There are only mind-numbingly simple commands that move bits "
"from one spot to another, add them, and shift them."
msgstr ""
"Die Assemblersprache ist eine Verbesserung gegenüber der Maschinensprache. "
"Aber es ist nicht keine riesige Verbesserung. Warum? Assembler-Anweisungen "
"sind sehr simpel gestrickt. Es gibt keine Befehle wie \"zeichne hier ein "
"Gebäude\". Oder sogar \"print Hallo\". Es gibt nur hirnverbrannte, einfache "
"Befehle, die Bits von einer Stelle zur anderen bewegen, addieren und "
"verschieben."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:172
msgid "Third Generation Languages"
msgstr "Sprachen der dritten Generation"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:177
msgid ""
".. image:: "
"chapters/06_what_is_a_programming_language/Grace_Hopper_and_UNIVAC.jpg"
msgstr ""
".. image:: "
"chapters/06_what_is_a_programming_language/Grace_Hopper_and_UNIVAC.jpg"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:177
msgid ""
"Source: `Wikipedia Grace Hopper and UNIVAC "
"<https://en.wikipedia.org/wiki/Grace_Hopper#/media/File:Grace_Hopper_and_UNIVAC.jpg>`_"
msgstr ""
"Quelle: `Wikipedia Grace Hopper and UNIVAC "
"<https://en.wikipedia.org/wiki/Grace_Hopper#/media/File:Grace_Hopper_and_UNIVAC.jpg>`_"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:179
msgid ""
"`Third Generation Languages`_ (3GL) started with `John Backus`_ creating "
"FORTRAN in 1954 and `Grace Hopper`_ creating FLOW-MATIC in 1955 which "
"evolved into COBOL_ by 1959. There are many, many different third generation"
" languages now. These languages often specialize at certain tasks. For "
"example, the language C_ is great at creating small, fast programs that can "
"run on minimal hardware. PHP_ is an easy-to-use language that can build "
"websites."
msgstr ""
"`Sprachen der dritten Generation`_ (3GL) begannen mit der Entwicklung von "
"FORTRAN durch `John Backus`_ im Jahr 1954 und FLOW-MATIC durch `Grace "
"Hopper`_ im Jahr 1955, das sich bis 1959 zu COBOL_ weiterentwickelte. "
"Inzwischen gibt es viele, viele verschiedene Sprachen der dritten "
"Generation. Diese Sprachen spezialisieren sich oft auf bestimmte Aufgaben. "
"Zum Beispiel ist die Sprache C_ hervorragend geeignet, um kleine, schnelle "
"Programme zu erstellen, die auf minimaler Hardware laufen können. PHP_ ist "
"eine einfach zu verwendende Sprache, mit der man Webseiten erstellen kann."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:187
msgid ""
"Most of the original computer scientists were female. See `Grace Hopper`_, "
"`Hedy Lamar`_, and `Ada Lovelace`_ for examples. If you want to find other "
"female programmers who code in Python, check out `@PyLadies "
"<https://twitter.com/PyLadies>`_, `@DJangoGirls "
"<https://twitter.com/djangogirls>`_, and `@WomenWhoCode "
"<https://twitter.com/WomenWhoCode>`_."
msgstr ""
"Die meisten der ursprünglichen Informatiker waren weiblich. Siehe `Grace "
"Hopper`_, `Hedy Lamar`_ und `Ada Lovelace`_ zum Beispiel. Wenn du andere "
"Programmiererinnen finden wilsst, die in Python programmieren, schau bei "
"@PyLadies, @DJangoGirls und @WomenWhoCode vorbei."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:204
msgid "Third generation languages usually fall into one of three categories."
msgstr ""
"Sprachen der dritten Generation fallen normalerweise in eine von drei "
"Kategorien."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:206
msgid ""
"**Compiled:** The computer takes the original source code, and uses a "
"*compiler* to translate it to machine code. The user then run the machine "
"code. The original source code is not needed to run the program. \"C\" is an"
" example of a language that works this way. So is the 2GL assembly language "
"we just talked about."
msgstr ""
"**Kompiliert:** Der Computer nimmt den ursprünglichen Quellcode und "
"verwendet einen **Compiler**, um ihn in Maschinencode zu übersetzen. Der "
"Benutzer führt dann den Maschinencode aus. Der ursprüngliche Quellcode wird "
"nicht benötigt, um das Programm auszuführen. \"C\" ist ein Beispiel für eine"
" Sprache, die auf diese Weise funktioniert. Ebenso wie die 2GL-"
"Assemblersprache, über die wir gerade gesprochen haben."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:211
msgid ""
"**Interpreted:** The computer looks at the source code and translates/runs "
"it line-by-line. The compile step is not needed, but the user needs both the"
" source code and an interpreter to run the program. Python is an example of "
"an interpreted language."
msgstr ""
"**Interpretiert:** Der Computer sieht sich den Quellcode an und "
"übersetzt/führt ihn Zeile für Zeile aus. Der Schritt des Kompilierens "
"entfällt, aber der Benutzer benötigt sowohl den Quellcode als auch einen "
"Interpreter, um das Programm auszuführen. Python ist ein Beispiel für eine "
"interpretierte Sprache."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:216
msgid ""
"**Runtime Environment:** Languages such as Java and C# take source code, and"
" compile the source code to a machine language. But not the language of your"
" actual machine, they compile to a *virtual* machine. This is a separate "
"program that acts as a layer between the real machine and the compiled code."
" This allows for better security, portability, and memory management."
msgstr ""
"**Laufzeitumgebung:** Sprachen wie Java und C# nehmen Quellcode und "
"kompilieren den Quellcode in eine Maschinensprache. Aber nicht die Sprache "
"deiner tatsächlichen Maschine, sie kompilieren in eine *virtuelle* Maschine."
" Dies ist ein separates Programm, das als Schicht zwischen der realen "
"Maschine und dem kompilierten Code fungiert. Dies ermöglicht eine bessere "
"Sicherheit, Portabilität und Speicherverwaltung."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:222
msgid ""
"Working with a compiled language is like taking a book in Spanish and "
"translating it to English. You no longer need the Spanish book, and you "
"don't need the translator. However, if you want to edit or change the book "
"you have to re-translate everything."
msgstr ""
"Das Arbeiten mit einer kompilierten Sprache ist so, als würde man ein "
"spanisches Buch nehmen und es ins Englische übersetzen. Du brauchst das "
"spanische Buch und den Übersetzer nicht mehr. Wenn du jedoch das Buch "
"bearbeiten oder ändern willst, musst du alles neu übersetzen."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:227
msgid ""
"Working with an interpreted language is like working with a interpreter. You"
" can communicate back and forth with a person that knows both English and "
"Spanish. You need the original Spanish, the English, and the interpreter. It"
" is easier to make ad-hoc changes and carry out a dialog. Interpreters often"
" help prevent computers from running commands that will cause major crashes "
"or common security issues. Kind of like having a human interpreter that "
"says, \"You don't *really* want to say that.\""
msgstr ""
"Die Arbeit mit einer interpretierten Sprache ist wie die Arbeit mit einem "
"Dolmetscher. Du kannst mit einer Person, die sowohl Englisch als auch "
"Spanisch kann, hin und her kommunizieren. Du brauchst das Originalspanisch, "
"das Englisch und den Dolmetscher. Es ist einfacher, ad-hoc Änderungen "
"vorzunehmen und einen Dialog zu führen. Interpretierer helfen oft dabei, zu "
"verhindern, dass der Computer Befehle ausführt, die zu größeren Abstürzen "
"oder allgemeinen Sicherheitsproblemen führen. Es ist so, als hätte man einen"
" menschlichen Dolmetscher, der sagt: \"Das willst du nicht *wirklich* "
"sagen.\""

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:235
msgid ""
"Using a runtime environment is hard to explain in human terms. It is a "
"hybrid of the two systems. You need source code. You need a compiler. "
"Instead of the compiler making machine code for the CPU, it makes machine "
"code for a **virtual machine**."
msgstr ""
"Die Verwendung einer Laufzeitumgebung ist in menschlichen Begriffen schwer "
"zu erklären. Es ist eine Mischung aus den beiden Systemen. Du brauchst "
"Quellcode und einen Compiler. Anstatt dass der Compiler Maschinencode für "
"die CPU erstellt, erstellt er Maschinencode für eine virtuelle Maschine."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:240
msgid "Python as a Computer Language"
msgstr "Python als Computersprache"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:242
msgid ""
"Python is a great language to start programming in. Python is a Top-5 "
"language in popularity according to the `TIOBE Index <http://www.tiobe.com"
"/tiobe-index/>`_. While it may be slightly less popular than Java, it is "
"easier to read and learn. Less work is required to do graphics. And "
"everything you learn in Python you can also apply when you learn other "
"popular languages, such as `C#`_ or Java_."
msgstr ""
"Python ist eine großartige Sprache, um mit der Programmierung zu beginnen. "
"Python ist laut TIOBE-Index <http://www.tiobe.com/tiobe-index/>`_ eine der 5"
" beliebtesten Programmiersprachen. Sie ist zwar etwas weniger populär als "
"Java, aber sie ist einfacher zu lesen und zu lernen. Es ist weniger Arbeit "
"erforderlich, um Grafiken zu erstellen und alles, was du in Python lernst, "
"kannst du auch anwenden, wenn du andere beliebte Sprachen wie C# oder Java "
"lernst."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:254
msgid ""
"Python a great language for people interested in `automating boring things "
"<https://automatetheboringstuff.com/>`_, because you can program repetitive "
"tasks to happen automatically. Python is also extremely popular in data "
"analytics. Typically researchers will use the add-on libraries like `Pandas "
"<https://pandas.pydata.org/>`_ and `Jupyter Notebooks "
"<http://jupyter.org/>`_."
msgstr ""
"Python ist eine großartige Sprache für Leute, die daran interessiert sind, "
"langweilige Dinge zu automatisieren <https://automatetheboringstuff.com/>`_,"
" weil man sich wiederholende Aufgaben so programmieren kann, dass sie "
"automatisch ablaufen. Python ist auch in der Datenanalyse sehr beliebt. "
"Typischerweise werden Forscher die Zusatzbibliotheken, wie `Pandas "
"<https://pandas.pydata.org/>`_ und `Jupyter Notebooks "
"<http://jupyter.org/>`_verwenden."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:263
msgid "Python 2.x vs. Python 3.x"
msgstr "Python 2.x vs. Python 3.x"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:265
msgid ""
"There are two main versions of Python. When Python moved to version 3, there"
" were changes that didn't work with all the currently written Python 2 "
"programs. It was too much work to suddenly rewrite thousands of Python 2 "
"programs. So both Python 2 and Python 3 were being developed simultaneously "
"for a while."
msgstr ""
"Es gibt zwei Hauptversionen von Python. Als Python auf Version 3 umgestellt "
"wurde, gab es Änderungen, die nicht mit allen aktuell geschriebenen "
"Python-2-Programmen funktionierten. Es war zu viel Arbeit, plötzlich "
"tausende von Python 2 Programmen neu zu schreiben. Also wurden eine Zeit "
"lang sowohl Python 2 als auch Python 3 gleichzeitig entwickelt."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:272
msgid "We are using Python 3. Why does Python 2 matter to us?"
msgstr "Wir verwenden Python 3. Warum spielt Phyton 2 für uns eine Rolle?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:274
msgid ""
"If you search up examples on the web, you might find incompatible Python 2 "
"examples."
msgstr ""
"Wenn du im Web nach Beispielen suchst, findest du vielleicht inkompatible "
"Python 2 Beispiele."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:275
msgid "Systems such as the Mac and Linux have Python 2 installed by default."
msgstr ""
"Auf Systemen wie Mac und Linux ist Python 2 standardmäßig installiert."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:277
msgid ""
"If you see a Python example on the web that has a ``print`` statement that "
"looks like:"
msgstr ""
"Wenn du ein Python-Beispiel im Web siehst, das eine ``print`` Anweisung hat,"
" die so aussieht:"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:280
msgid ""
"# A \"print\" statement with Python Version 2.x\n"
"print \"Hi\""
msgstr ""
"# A \"print\" statement with Python Version 2.x\n"
"print \"Hi\""

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:285
msgid "Instead of:"
msgstr "Anstelle von:"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:287
msgid ""
"# A \"print\" statement with Python Version 3.x\n"
"print(\"Hi\")"
msgstr ""
"# A \"print\" statement with Python Version 3.x\n"
"print(\"Hi\")"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:292
msgid ""
"Then you have a Python 2 example and it won't run with what we install and "
"use in this class."
msgstr ""
"Dann hast du ein Python 2 Beispiel und es wird nicht mit dem laufen, was wir"
" in diesem Kurs installieren und verwenden."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:295
msgid ""
"In the case of the Mac and Linux, it will be important to use Python 3 and "
"not Python 2. Since Python 2 is installed by default, it can be a bit of a "
"hassle to make sure they use Python 3."
msgstr ""
"Im Falle von Mac und Linux wird es wichtig sein, Python 3 und nicht Python 2"
" zu verwenden. Da Python 2 standardmäßig installiert ist, kann es ein "
"bisschen mühsam sein, sicherzustellen, dass Python 3 verwendet wird."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:300
msgid "Review"
msgstr "Review"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:302
msgid ""
"In this chapter we learned about what a CPU is, and that computer "
"instructions are simply numbers fed into the CPU. We learned about first, "
"second, and third generation computer languages. Second and third generation"
" languages have programmers write source code, that is saved into source "
"files. Those files are used by either a compiler or an interpreter to turn "
"the source code into machine language."
msgstr ""
"In diesem Kapitel haben wir gelernt, was eine CPU ist und dass "
"Computerbefehle einfach Zahlen sind, die in die CPU eingegeben werden. Wir "
"haben etwas über Computersprachen der ersten, zweiten und dritten Generation"
" gelernt. Bei Sprachen der zweiten und dritten Generation schreiben "
"Programmierer Quellcode, der in Quelldateien gespeichert wird. Diese Dateien"
" werden entweder von einem Compiler oder einem Interpreter verwendet, um den"
" Quellcode in Maschinensprache umzuwandeln."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:309
msgid ""
"Some languages compile code to a set of instructions for a virtual machine, "
"and the virtual machine can run on multiple different types of systems."
msgstr ""
"Einige Sprachen kompilieren Code zu einem Satz von Anweisungen für eine "
"virtuelle Maschine, und die virtuelle Maschine kann auf mehreren "
"verschiedenen Arten von Systemen laufen."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:313
msgid ""
"The language we are using for this class is called Python, it is one of the "
"top five computer languages in use today."
msgstr ""
"Die Sprache, die wir für diesen Kurs verwenden, heißt Python und sie ist "
"eine der fünf wichtigsten Computersprachen, die heute verwendet werden."

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:317
msgid "Review Questions"
msgstr "Fragen zur Überprüfung"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:319
msgid ""
"What do we call the main \"brain\" of the computer where all the processing "
"happens?"
msgstr ""
"Wie nennt man das Haupt-\"Gehirn\" des Computers, in dem die gesamte "
"Verarbeitung stattfindet?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:320
msgid "Instructions for a CPU are made up of a long sequence of what?"
msgstr "Die Anweisungen für eine CPU bestehen aus einer langen Folge von was?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:321
msgid "What is the name of the native language for CPUs?"
msgstr "Wie heißt die native Sprache für CPUs?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:322
msgid "What is the difference between a CPU and a GPU?"
msgstr "Was ist der Unterschied zwischen einer CPU und einer GPU?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:323
msgid "Commands with a GPU can be processed by hundreds or thousands of what?"
msgstr ""
"Befehle mit einer GPU können von Hunderten oder Tausenden von was "
"verarbeitet werden?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:324
msgid ""
"If machine language is a first-generation language, what is the second-"
"generation language?"
msgstr ""
"Wenn Maschinensprache eine Sprache der ersten Generation ist, was ist dann "
"die Sprache der zweiten Generation?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:326
msgid "What do we call the file that programmers type commands into?"
msgstr "Wie nennt man die Datei, in die Programmierer Befehle eintippen?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:327
msgid ""
"What is the name of the program that turns assembly language into machine "
"language?"
msgstr ""
"Wie heißt das Programm, das Assemblersprache in Maschinensprache umwandelt?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:329
msgid "Third-generation languages usually fall into what three categories?"
msgstr ""
"Sprachen der dritten Generation fallen normalerweise in welche drei "
"Kategorien?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:330
msgid "What is the difference between a compiler and an interpreter?"
msgstr ""
"Was ist der Unterschied zwischen einem Compiler und einem Interpreter?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:331
msgid "What generation of language is Python?"
msgstr "Welche Generation von Sprache ist Python?"

#: ../../source/chapters/06_what_is_a_programming_language/index.rst:332
msgid ""
"What are some of the most popular languages in use today, according to the "
"TIOBE Index?"
msgstr ""
"Welche Sprachen sind heute, laut dem TIOBE-Index einige der am häufigsten im"
" Einsatz/beliebtesten?"
